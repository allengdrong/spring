<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.notice.mapper.NoticeMapper">

	<!-- 1. 리스트 -->
	<select id="list" resultType="org.zerock.notice.vo.NoticeVO">
		select no, title, startDate, endDate
		from notice
		
			<!-- mybatis에서는 데이터 자동 변환을 한다. 글자가 한자이면 char -->
			<include refid = "search" />
		
		order by no desc
	</select>
	
	<!--  검색 조건 쿼리 따로 저장하기 -->
	<sql id = "search">
	
			<!-- mybatis에서는 데이터 자동 변환을 한다. 글자가 한자이면 char -->
		<if test="word != null and word != ''.toString">
			<!-- 검색하는 데이터가 있는 경우 where가 나온다. -->
			where 1 = 0
			<if test="key == 't'.toString()">
				OR title like '%' || #{word} || '%'
			</if>
			<if test="key == 'c'.toString()">
				OR content like '%' || #{word} || '%'
			</if>
			<if test="key == 'tc'">
				OR title like '%' || #{word} || '%'
				OR content like '%' || #{word} || '%'
			</if>
		</if>
	</sql>
	
	<!-- 1-1. 공지 게시판 전체 글의 갯수 -->
	<select id="getTotalRow" resultType="java.lang.Long">
		select count(*) from notice
		
		<include refid = "search" />
		
	</select>

	<!-- 2. 글보기 -->
	<select id="view" resultType="org.zerock.notice.vo.NoticeVO">
		select no, title, content, startDate, endDate, writeDate, updateDate
		from notice
		where no = #{no}
	</select>

	<!-- 3. 글쓰기 -->
	<insert id="write">
		insert into notice(no, title, content, startDate, endDate)
		values(notice_seq.nextval, #{title}, #{content}, #{startDate}, #{endDate})
	</insert>

	<!-- 4. 글수정 -->
	<update id="update">
		update notice set title = #{title}, content = #{content}, startDate = #{startDate}, endDate = #{endDate}
		where no = #{no}
	</update>

	<!-- 5. 글삭제 -->
	<delete id="delete">
		delete from notice
		where no = #{no}
	</delete>

</mapper>